{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","components/TodoList/index.js"],"names":["_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","listApi","a","Promise","resolve","id","content","editable","checked","Textarea","inputProps","ref","useRef","useEffect","disabled","current","focus","List","useState","listData","setListData","isDeleting","setIsDeleting","previousItems","setPreviousItems","lastIdGen","length","currentItemIds","map","item","previousItemsIds","Math","max","addPreviousItems","removedItem","push","shift","handleEdit","data","forEach","inital","fetchData","className","onClick","newItem","recoverItem","pop","index","splice","handleCheck","onDoubleClick","name","onChange","e","target","value","changeHandler","onBlur","placeholder","idx","findIndex","i","handleDelete"],"mappings":"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","file":"static/js/5.a68d4ac1.chunk.js","sourcesContent":["import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import { useState, useEffect, useRef } from 'react'\nimport './todo.scss'\n\n// pretend data is come from api\nconst listApi = async () => {\n  return await Promise.resolve([\n    { id: 1, content: 'Hola~', editable: false, checked: false },\n    {\n      id: 2,\n      content: 'Double click me can activate edit function~',\n      editable: false,\n      checked: false,\n    },\n    {\n      id: 3,\n      content: 'Press \"Toggle delete\" button will show delete icons~',\n      editable: false,\n      checked: false,\n    },\n    {\n      id: 4,\n      content: 'Undo button can recover at most 20 items which recently been deleted...',\n      editable: false,\n      checked: false,\n    },\n    {\n      id: 5,\n      content: 'the recover item will back to the order it was',\n      editable: false,\n      checked: false,\n    },\n    {\n      id: 6,\n      content: '',\n      editable: false,\n      checked: false,\n    },\n    {\n      id: 7,\n      content: '',\n      editable: false,\n      checked: false,\n    },\n    {\n      id: 8,\n      content: '',\n      editable: false,\n      checked: false,\n    },\n    {\n      id: 9,\n      content: '',\n      editable: false,\n      checked: false,\n    },\n    {\n      id: 10,\n      content: '',\n      editable: false,\n      checked: false,\n    },\n    {\n      id: 11,\n      content: '',\n      editable: false,\n      checked: false,\n    },\n    {\n      id: 12,\n      content: '',\n      editable: false,\n      checked: false,\n    },\n    {\n      id: 13,\n      content: '',\n      editable: false,\n      checked: false,\n    },\n  ])\n}\n\nconst Textarea = ({ inputProps }) => {\n  const ref = useRef(null)\n  useEffect(() => {\n    if (!inputProps.disabled) ref.current.focus()\n  }, [inputProps.disabled])\n\n  return <textarea ref={ref} {...inputProps} />\n}\n\nconst List = () => {\n  const [listData, setListData] = useState([])\n  const [isDeleting, setIsDeleting] = useState(false)\n  const [previousItems, setPreviousItems] = useState([])\n\n  const handleAddClick = () => {\n    const lastItemId = lastIdGen()\n    const newItem = {\n      id: lastItemId + 1,\n      content: '',\n      editable: true,\n      checked: false,\n    }\n    listData.push(newItem)\n    setListData([...listData])\n    setPreviousItems([...previousItems])\n  }\n\n  const lastIdGen = () => {\n    if (!listData.length && !previousItems.length) return 0\n    const currentItemIds = listData.length ? listData.map((item) => item.id) : []\n    const previousItemsIds = previousItems.length ? previousItems.map((item) => item.id) : []\n\n    return Math.max(...currentItemIds, ...previousItemsIds)\n  }\n\n  const previousItemsWithoutIndexGen = () => {\n    if (!previousItems.length) return []\n    previousItems.forEach((item) => delete item.index)\n  }\n\n  const handleDelete = (id) => {\n    const idx = listData.findIndex((i) => i.id === id)\n    let removedItem = listData.splice(idx, 1)[0]\n    removedItem.index = idx\n    addPreviousItems(removedItem)\n    setListData([...listData])\n    setPreviousItems([...previousItems])\n  }\n\n  const addPreviousItems = (removedItem) => {\n    previousItems.push(removedItem)\n    if (previousItems.length > 19) {\n      previousItems.shift()\n    }\n  }\n\n  const changeHandler = (e, item) => {\n    const { name, value } = e.target\n    item[name] = value\n    setListData([...listData])\n  }\n\n  const handleEdit = (item, editable, id) => {\n    item.editable = editable\n    setListData([...listData])\n  }\n\n  const handleCheck = (item) => {\n    item.checked = !item.checked\n    setListData([...listData])\n  }\n\n  const handleUndo = (item) => {\n    if (!previousItems.length) return\n    const recoverItem = previousItems.pop()\n    if (typeof recoverItem.index === 'number') {\n      listData.splice(recoverItem.index, 0, recoverItem)\n    } else listData.push(recoverItem)\n\n    setListData([...listData])\n    setPreviousItems([...previousItems])\n  }\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const data = await listApi()\n      data.forEach((item) => (item.inital = true))\n      setListData(data)\n    }\n    fetchData()\n  }, [])\n\n  return (\n    <div className={`list-container ${isDeleting ? 'edit-mode' : ''}`}>\n      {/* <div className='sticky-constraintrectangle'> */}\n      <div className='top-btns'>\n        <button onClick={handleAddClick}>Add</button>\n        {<button onClick={() => setIsDeleting(!isDeleting)}>Toggle Delete</button>}\n        {<button onClick={handleUndo}>Undo</button>}\n      </div>\n      {/* </div> */}\n      <div className='list'>\n        {listData.map((item) => (\n          <div key={item.id} className='item'>\n            <div className={`checkbox ${item.checked ? 'checked' : ''}`} onClick={() => handleCheck(item)}>\n              {item.checked ? '☑' : '☐'}\n            </div>\n            <div className='input-container' onDoubleClick={() => handleEdit(item, true)}>\n              <Textarea\n                inputProps={{\n                  className: 'input',\n                  name: 'content',\n                  onChange: (e) => changeHandler(e, item),\n                  onBlur: (e) => handleEdit(item, false),\n                  value: item.content,\n                  disabled: !item.editable,\n                  placeholder: 'Things to be done~',\n                }}\n              />\n            </div>\n            <div className='inside-btns'>{<button onClick={() => handleDelete(item.id)}>X</button>}</div>\n          </div>\n        ))}\n      </div>\n    </div>\n  )\n}\n\nexport default List\n"],"sourceRoot":""}