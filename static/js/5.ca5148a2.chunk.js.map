{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","components/TodoList/index.js"],"names":["_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","listApi","a","Promise","resolve","id","content","editable","checked","Textarea","inputProps","ref","useRef","useEffect","disabled","current","focus","List","useState","listData","setListData","isDeleting","setIsDeleting","previousItems","setPreviousItems","lastIdGen","length","currentItemIds","map","item","previousItemsIds","Math","max","addPreviousItems","removedItem","push","shift","handleEdit","data","forEach","inital","fetchData","className","onClick","newItem","recoverItem","pop","index","splice","handleCheck","onDoubleClick","name","onChange","e","target","value","changeHandler","onBlur","placeholder","idx","findIndex","i","handleDelete"],"mappings":"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","file":"static/js/5.ca5148a2.chunk.js","sourcesContent":["import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import { useState, useEffect, useRef } from 'react'\r\nimport './todo.scss'\r\n\r\n// pretend data is come from api\r\nconst listApi = async () => {\r\n  return await Promise.resolve([\r\n    { id: 1, content: 'Hola~', editable: false, checked: false },\r\n    {\r\n      id: 2,\r\n      content: 'Double click me can activate edit function~',\r\n      editable: false,\r\n      checked: false,\r\n    },\r\n    {\r\n      id: 3,\r\n      content: 'Press \"Toggle delete\" button will show delete icons~',\r\n      editable: false,\r\n      checked: false,\r\n    },\r\n    {\r\n      id: 4,\r\n      content: 'Undo button can recover at most 20 items which recently been deleted...',\r\n      editable: false,\r\n      checked: false,\r\n    },\r\n    {\r\n      id: 5,\r\n      content: 'the recover item will back to the order it was',\r\n      editable: false,\r\n      checked: false,\r\n    },\r\n    {\r\n      id: 6,\r\n      content: '',\r\n      editable: false,\r\n      checked: false,\r\n    },\r\n    {\r\n      id: 7,\r\n      content: '',\r\n      editable: false,\r\n      checked: false,\r\n    },\r\n    {\r\n      id: 8,\r\n      content: '',\r\n      editable: false,\r\n      checked: false,\r\n    },\r\n    {\r\n      id: 9,\r\n      content: '',\r\n      editable: false,\r\n      checked: false,\r\n    },\r\n    {\r\n      id: 10,\r\n      content: '',\r\n      editable: false,\r\n      checked: false,\r\n    },\r\n    {\r\n      id: 11,\r\n      content: '',\r\n      editable: false,\r\n      checked: false,\r\n    },\r\n    {\r\n      id: 12,\r\n      content: '',\r\n      editable: false,\r\n      checked: false,\r\n    },\r\n    {\r\n      id: 13,\r\n      content: '',\r\n      editable: false,\r\n      checked: false,\r\n    },\r\n  ])\r\n}\r\n\r\nconst Textarea = ({ inputProps }) => {\r\n  const ref = useRef(null)\r\n  useEffect(() => {\r\n    if (!inputProps.disabled) ref.current.focus()\r\n  }, [inputProps.disabled])\r\n\r\n  return <textarea ref={ref} {...inputProps} />\r\n}\r\n\r\nconst List = () => {\r\n  const [listData, setListData] = useState([])\r\n  const [isDeleting, setIsDeleting] = useState(false)\r\n  const [previousItems, setPreviousItems] = useState([])\r\n\r\n  const handleAddClick = () => {\r\n    const lastItemId = lastIdGen()\r\n    const newItem = {\r\n      id: lastItemId + 1,\r\n      content: '',\r\n      editable: true,\r\n      checked: false,\r\n    }\r\n    listData.push(newItem)\r\n    setListData([...listData])\r\n    setPreviousItems([...previousItems])\r\n  }\r\n\r\n  const lastIdGen = () => {\r\n    if (!listData.length && !previousItems.length) return 0\r\n    const currentItemIds = listData.length ? listData.map((item) => item.id) : []\r\n    const previousItemsIds = previousItems.length ? previousItems.map((item) => item.id) : []\r\n\r\n    return Math.max(...currentItemIds, ...previousItemsIds)\r\n  }\r\n\r\n  const previousItemsWithoutIndexGen = () => {\r\n    if (!previousItems.length) return []\r\n    previousItems.forEach((item) => delete item.index)\r\n  }\r\n\r\n  const handleDelete = (id) => {\r\n    const idx = listData.findIndex((i) => i.id === id)\r\n    let removedItem = listData.splice(idx, 1)[0]\r\n    removedItem.index = idx\r\n    addPreviousItems(removedItem)\r\n    setListData([...listData])\r\n    setPreviousItems([...previousItems])\r\n  }\r\n\r\n  const addPreviousItems = (removedItem) => {\r\n    previousItems.push(removedItem)\r\n    if (previousItems.length > 19) {\r\n      previousItems.shift()\r\n    }\r\n  }\r\n\r\n  const changeHandler = (e, item) => {\r\n    const { name, value } = e.target\r\n    item[name] = value\r\n    setListData([...listData])\r\n  }\r\n\r\n  const handleEdit = (item, editable, id) => {\r\n    item.editable = editable\r\n    setListData([...listData])\r\n  }\r\n\r\n  const handleCheck = (item) => {\r\n    item.checked = !item.checked\r\n    setListData([...listData])\r\n  }\r\n\r\n  const handleUndo = (item) => {\r\n    if (!previousItems.length) return\r\n    const recoverItem = previousItems.pop()\r\n    if (typeof recoverItem.index === 'number') {\r\n      listData.splice(recoverItem.index, 0, recoverItem)\r\n    } else listData.push(recoverItem)\r\n\r\n    setListData([...listData])\r\n    setPreviousItems([...previousItems])\r\n  }\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const data = await listApi()\r\n      data.forEach((item) => (item.inital = true))\r\n      setListData(data)\r\n    }\r\n    fetchData()\r\n  }, [])\r\n\r\n  return (\r\n    <div className={`list-container ${isDeleting ? 'edit-mode' : ''}`}>\r\n      {/* <div className='sticky-constraintrectangle'> */}\r\n      <div className='top-btns'>\r\n        <button onClick={handleAddClick}>Add</button>\r\n        {<button onClick={() => setIsDeleting(!isDeleting)}>Toggle Delete</button>}\r\n        {<button onClick={handleUndo}>Undo</button>}\r\n      </div>\r\n      {/* </div> */}\r\n      <div className='list'>\r\n        {listData.map((item) => (\r\n          <div key={item.id} className='item'>\r\n            <div className={`checkbox ${item.checked ? 'checked' : ''}`} onClick={() => handleCheck(item)}>\r\n              {item.checked ? '☑' : '☐'}\r\n            </div>\r\n            <div className='input-container' onDoubleClick={() => handleEdit(item, true)}>\r\n              <Textarea\r\n                inputProps={{\r\n                  className: 'input',\r\n                  name: 'content',\r\n                  onChange: (e) => changeHandler(e, item),\r\n                  onBlur: (e) => handleEdit(item, false),\r\n                  value: item.content,\r\n                  disabled: !item.editable,\r\n                  placeholder: 'Things to be done~',\r\n                }}\r\n              />\r\n            </div>\r\n            <div className='inside-btns'>{<button onClick={() => handleDelete(item.id)}>X</button>}</div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default List\r\n"],"sourceRoot":""}